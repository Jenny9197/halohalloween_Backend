<<<<<<< HEAD
openapi: 3.0.0
info: 
  version: 1.0.0 
  title: HaloHalloween
  description: HaloHalloween 설계 
servers: 
  # Added by API Auto Mocking Plugin 
  # Added by API Auto Mocking Plugin 
  - description: mini2
    url: ''
paths:
  /user/register:
    post:
      summary: user 회원가입 기능
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userNickname:
                  type: string
                userEmail:
                  type: string
                userPassword:
                  type: string
              example: #sample object
                userNickname: test1
                userEmail: admin@test1.com
                userPassword: test1
      responses:
        '201':
          description: 성공
        '500':
          description: 실패
  /user/auth:
    post:
      summary: 로그인 기능
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userEmail:
                  type: string
                userPassword:
                  type: string
              example: #sample object
                userEmail: admin@test1.com
                userPassword: test1
      responses:
        '201':
          description: 성공
        '500':
          description: 실패
  /user/chkLogin:
    get:
      #로그인할때 헤더로 보내게 해 줌(아래 설명) - 자물쇠 생기게 함
      security: 
        - bearerAuth: []
      summary: 로그인 유저 정보 확인
      responses:
        '201':
          description: 성공
        '500':
          description: 실패
############
#replyRouter
  /reply/replyList/{postID}:
    get:
      security: 
        - bearerAuth: []
      summary: 댓글 조회
      parameters: 
        - in: path 
          name: postID 
          schema: 
            type: string
      responses:
        '200':
          description: Okay
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /reply/replyPost:
    post:
      security: 
        - bearerAuth: []
      summary: 댓글 등록
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
                replyNickname:
                  type: string
                replyComment:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /reply/replyDelete:
    patch:
      security: 
        - bearerAuth: []
      summary: 댓글 삭제
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replyID:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /reply/replyModify:
    patch:
      security: 
        - bearerAuth: []
      summary: 댓글 수정
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replyID:
                  type: string
                replyComment:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
###########################
#POST_ROUTER
  /post/inspect/{postID}:
    get:
      security: 
        - bearerAuth: []
      parameters: 
        - in: path 
          name: postID 
          schema: 
          type: string
      summary: 게시글 띄워주기(상세페이지)
      responses:
        '200':
          description: Okay
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
  /post/postlist:
    get:
      security: 
        - bearerAuth: []
      summary: 게시물 포스팅 날짜대로 불러오기
      responses:
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
  /post/postBest:
    get:
      security: 
        - bearerAuth: []
      summary: 게시물 4가지 불러오기
      responses:
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
  /post/posting:
    post:
      security: 
        - bearerAuth: []
      summary: 게시글 등록하기
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postingTitle:
                  type: string
                postingDate:
                  type: string
                postingComment:
                  type: string
                postingImgUrl:
                  type: string
                postingDel:
                  type: number
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /post/postModify:
    patch:
      security: 
        - bearerAuth: []
      summary: 게시글 수정하기
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
                postingAuthor:
                  type: string
                postingTitle:
                  type: string
                postingComment:
                  type: string
                postingUpdate:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /post/postDelete:
    patch:
      security: 
        - bearerAuth: []
      summary: 게시글 삭제하기
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
      responses:
        '201':
          description: 성공
        '404':
          description: 게시글 삭제
        '500':
          description: 서버 에러
  /post/postClick:
    patch:
      security: 
        - bearerAuth: []
      summary: 게시글 조회수 증가
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
#로그인 인증해주는 component
components: 
  securitySchemes: 
    bearerAuth: 
      type: http 
      scheme: bearer 
=======
openapi: 3.0.0 
info: 
  version: 1.0.0 
  title: node home Work 
  description: node home work api 설계 
servers: 
  # Added by API Auto Mocking Plugin 
  # Added by API Auto Mocking Plugin 
  - description: mini2
    url: http://localhost:3000
paths:
  /user/register:
    post:
      summary: user 회원가입 기능
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userNickname:
                  type: string
                userEmail:
                  type: string
                userPassword:
                  type: string
              example: #sample object
                userNickname: test1
                userEmail: admin@test1.com
                userPassword: test1
      responses:
        '201':
          description: 성공
        '500':
          description: 실패
  /user/auth:
    post:
      summary: 로그인 기능
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userEmail:
                  type: string
                userPassword:
                  type: string
              example: #sample object
                userEmail: admin@test1.com
                userPassword: test1
      responses:
        '201':
          description: 성공
        '500':
          description: 실패
  /user/chkLogin:
    get:
      #로그인할때 헤더로 보내게 해 줌(아래 설명) - 자물쇠 생기게 함
      security: 
        - bearerAuth: []
      summary: 로그인 유저 정보 확인
      responses:
        '201':
          description: 성공
        '500':
          description: 실패
############
#replyRouter
  /reply/replyList/{postID}:
    get:
      security: 
        - bearerAuth: []
      summary: 댓글 조회
      parameters: 
        - in: path 
          name: postID 
          schema: 
            type: string
      responses:
        '200':
          description: Okay
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /reply/replyPost:
    post:
      security: 
        - bearerAuth: []
      summary: 댓글 등록
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
                replyNickname:
                  type: string
                replyComment:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /reply/replyDelete:
    patch:
      security: 
        - bearerAuth: []
      summary: 댓글 삭제
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replyID:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /reply/replyModify:
    patch:
      security: 
        - bearerAuth: []
      summary: 댓글 수정
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replyID:
                  type: string
                replyComment:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
###########################
#POST_ROUTER
  /post/inspect/{postID}:
    get:
      security: 
        - bearerAuth: []
      parameters: 
        - in: path 
          name: postID 
          schema: 
          type: string
      summary: 게시글 띄워주기(상세페이지)
      responses:
        '200':
          description: Okay
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
  /post/postlist:
    get:
      security: 
        - bearerAuth: []
      summary: 게시물 포스팅 날짜대로 불러오기
      responses:
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
  /post/postBest:
    get:
      security: 
        - bearerAuth: []
      summary: 게시물 4가지 불러오기
      responses:
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
  /post/posting:
    post:
      security: 
        - bearerAuth: []
      summary: 게시글 등록하기
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postingTitle:
                  type: string
                postingDate:
                  type: string
                postingComment:
                  type: string
                postingImgUrl:
                  type: string
                postingDel:
                  type: number
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /post/postModify:
    patch:
      security: 
        - bearerAuth: []
      summary: 게시글 수정하기
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
                postingAuthor:
                  type: string
                postingTitle:
                  type: string
                postingComment:
                  type: string
                postingUpdate:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 잘못된 데이터
        '500':
          description: 서버 에러
  /post/postDelete:
    patch:
      security: 
        - bearerAuth: []
      summary: 게시글 삭제하기
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
      responses:
        '201':
          description: 성공
        '404':
          description: 게시글 삭제
        '500':
          description: 서버 에러
  /post/postClick:
    patch:
      security: 
        - bearerAuth: []
      summary: 게시글 조회수 증가
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postID:
                  type: string
      responses:
        '201':
          description: 성공
        '400':
          description: 해당 데이터 존재하지 않음
        '500':
          description: 서버 에러
#로그인 인증해주는 component
components: 
  securitySchemes: 
    bearerAuth: 
      type: http 
      scheme: bearer 
>>>>>>> d515dcf2310efa195633c3917454b3300b92e768
      bearerFormat: JWT